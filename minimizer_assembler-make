#!/usr/bin/make -rRf

# Use minimizers to scaffold assemblies
# Written by Lauren Coombe @lcoombe

list_files=None
min_targets=$(addsuffix .k$(k).w$(w).tsv, $(list_files))
fa_targets=$(addsuffix .scaffolds.fa, $(list_files))
bam_targets=$(addsuffix .scaffolds.fa.bam.bai, $(list_files))
fai_targets=$(addsuffix .fai, $(list_files))

# List of edge weights
list_weights=None

# Prefix for output files
prefix=out_k$(k)_w$(w)

# Path to physlr installation
physlr_path=/projects/btl/lcoombe/git/physlr/src

# Path to minimizer assemble code
assemble_path=/projects/btl_scratch/lcoombe/assembly_merger/minimizer_assembler

# Reference

# Window size
w=1000

# Kmer size
k=64

# Number of threads
t=4

# Minimum edge weight
n=2

# Reference genome (for analysis)
ref=/projects/btl/lcoombe/reference-genomes/celegans/celegansN2_referencegenome.fna

SHELL=bash -e -o pipefail
ifeq ($(shell zsh -e -o pipefail -c 'true' 2>/dev/null; echo $$?), 0)
# Set pipefail to ensure that all commands of a pipe succeed.
SHELL=zsh -e -o pipefail
# Report run time and memory usage with zsh.
export REPORTTIME=1
export TIMEFMT=time user=%U system=%S elapsed=%E cpu=%P memory=%M job=%J
endif

# Record run time and memory usage in a file using GNU time.
ifneq ($(shell command -v gtime),)
time=command gtime -v -o $@.time
else
time=command time -v -o $@.time
endif

assemble: $(min_targets) \
	$(fai_targets) \
	$(prefix).mx.dot

analysis: $(bam_targets)

all: check_params assemble analysis

check_params:
ifeq ($(list_weights), None)
	$(error must set list_weights)
endif
ifeq ($(list_files), None)
	$(error must set list_files)
endif


help:
	@echo "Assembly merging with minimizers"
	@echo "Usage: minimizer_assembler-make assemble prefix=<prefix> list_files='List of fasta files' list_weights='List of weights (ints) per assembly'"
	@echo ""
	@echo "Note: ensure the lists of assemblies and weights are in the same order, and that both are space-separated"
	@echo "Commands:"
	@echo "t	Number of threads [4]"
	@echo "k	K-mer size for minimizers [64]"
	@echo "w	Window size for minimizers [1000]"
	@echo "n	Min. edge weight [2]"


.PHONY: all analysis assemble help check_params
.DELETE_ON_ERROR: $(prefix).mx.dot
.SECONDARY:

%.fa.k$(k).w$(w).tsv: %.fa
	$(time) $(assemble_path)/minimerize.py -k $(k) -w $(w) $< > $@

%.fa.fai: %.fa
	samtools faidx $<

$(prefix).mx.dot: $(addsuffix .k$(k).w$(w).tsv, $(list_files))
	$(time) $(assemble_path)/minimizer_assemble.py -p $(prefix) -n $(n) -l "$(list_weights)" -k $(k) $^

$(addsuffix .scaffolds.fa, $(list_files)): $(prefix).mx.dot
	touch $@

%.dot.png: %.dot
	dot -Tpng -o $@ $<

%.fa.bam: %.fa
	minimap2 -a -x asm5 -r100000 -t $(t) $(ref) $< |samtools view -b |samtools sort -o $@

%.bam.bai: %.bam
	samtools index $<